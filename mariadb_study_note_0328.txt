**데이터베이스**  2023년 03월 28일

**저장용량별 구분
대용량
	DB2	ibm
	oracle	oracle

	범용
	mysql	oracle
	mariadb	mariaDb
	sqlserver	ms - android
소형
	access ms
	sqlite ms 

데이터베이스와 연관된 개발자
1. 시스템 관리자(SA)
	설치
	외부 접근보안
2. 데이터베이스 관리자 DBA
	모니터링 - 튜닝
	백업, 복원(restore)
	내부 접근 보안

자격증 + oracle ( OCP/ OCM )


3. 개발
	데이터베이스와 프로그램 연동

SQL
	DML(Data Manipulation Lang) - 데이터 조작
		select
		insert
		update
		delete		
	DDL(Data Definition Lang) - 데이터 정의
		create
		alter
		drop
		rename
		truncate
	DCL (Data Control Lang) - 접근권한
		grant
		revoke
	TCL(Transaction Control Lang) - 트랜젝션
		commit
		rollback
		savepoint

[접속방법]
mysql -u root -p

[원격접속]
mysql -h <ip주소> -u root -p


데이터베이스  	-디렉토리
	테이블 	-데이터 저장소
		-행과 열(excel의확장판)

[데이터베이스 접속순서]
show databases;  //데이터베이스 목록출력
use 데이터베이스명; // 데이터베이스 접속
show tables; 	//테이블의목록
describe 테이블명;  (컬럼의 정의) // 줄여서 desc 

*대소문자 구별을 안함
select 컬럼절
from  테이블명

select * from dept; // 세미클론 까지를 한줄로 인식하기때문에 나눠서 타이핑해도 무관함  * = 전컬럼

select deptno, dname
from dept; // 원하는 내용만 선택해서 볼수 있음

select dname, deptno
    -> from dept // 순서가 바껴도 결과는 동일함

select empno, ename from emp; //사원테이블에서 이름출력

select deptno as no, dname as name, loc as location from dept; // 아리아스(명칭)변경
select deptno as 부서번호, dname as 부서이름 , loc as 부서위치  from dept;// 한글로도 변경가능
select deptno as '부서 번호', dname as '부서 이름' , loc as 부서위치  from dept;
산술연산자
비교연산자
논리연산자
 select sal, sal* 12 from emp; // 없는컬럼이라도 계산된컬럼도 보여줄수있음
+---------+----------+
| sal     | sal* 12  |
+---------+----------+
|  800.00 |  9600.00 |
| 1600.00 | 19200.00 |
| 1250.00 | 15000.00 |
| 2975.00 | 35700.00 |
| 1250.00 | 15000.00 |
| 2850.00 | 34200.00 |
| 2450.00 | 29400.00 |
| 3000.00 | 36000.00 |
| 5000.00 | 60000.00 |
| 1500.00 | 18000.00 |
| 1100.00 | 13200.00 |
|  950.00 | 11400.00 |
| 3000.00 | 36000.00 |
| 1300.00 | 15600.00 |
+---------+----------+

select sal, sal*12 '연봉' from emp; 
+---------+----------+
| sal     | 연봉     |
+---------+----------+
|  800.00 |  9600.00 |
| 1600.00 | 19200.00 |
| 1250.00 | 15000.00 |
| 2975.00 | 35700.00 |
| 1250.00 | 15000.00 |
| 2850.00 | 34200.00 |
| 2450.00 | 29400.00 |
| 3000.00 | 36000.00 |
| 5000.00 | 60000.00 |
| 1500.00 | 18000.00 |
| 1100.00 | 13200.00 |
|  950.00 | 11400.00 |
| 3000.00 | 36000.00 |
| 1300.00 | 15600.00 |
+---------+----------+

select sal, sal*12 + comm '연봉' from emp;
+---------+----------+
| sal     | 연봉     |
+---------+----------+
|  800.00 |     NULL |
| 1600.00 | 19500.00 |
| 1250.00 | 15500.00 |
| 2975.00 |     NULL |
| 1250.00 | 16400.00 |
| 2850.00 |     NULL |
| 2450.00 |     NULL |
| 3000.00 |     NULL |
| 5000.00 |     NULL |
| 1500.00 | 18000.00 |
| 1100.00 |     NULL |
|  950.00 |     NULL |
| 3000.00 |     NULL |
| 1300.00 |     NULL |
+---------+----------+

// 산술연산에서 null이 포함되면 결과값도 null로 나옴

select 2<3;
+-----+
| 2<3 |
+-----+
|   1 |
+-----+          ///   true/false 값은  1/0으로 표기됨

다르다 표기
select 2 != 3;
select 2 <> 3;   

select 컬럼이름 ...
from 테이블명
where 행제한 조건  - where절
	컬럼명 비교(논리) 연산 값

select *
from dept
where deptno = 10;  // 원하는 내용만 출력해서 선택가능

select empno, ename, sal  from emp where sal <= 1000;   // 급여가 1000 이하인 사원번호 사원이름 급여 출력

select empno, ename, sal from emp where empno = 7369; // 사원번호 7369인 사원에 대한 사원번호, 사원이름 , 급여 출력

select empno, ename, sal from emp where ename = king; //에러출력 (문자열로 기입한 부분은 반드시 단일따옴표를 붙여줘야함)

MariaDB [sample]> select empno, ename, sal from emp where ename > 'king';
// 문자열도 비교가 가능 아스키코드순서로 비교함

select empno, ename, sal from emp where ename > 'b'; // b이하의 데이터를 가져옴

select empno, ename, hiredate from emp where hiredate = '2011-12-03';
+-------+-------+------------+
| empno | ename | hiredate   |
+-------+-------+------------+
|  7900 | JAMES | 2011-12-03 |
|  7902 | FORD  | 2011-12-03 |
+-------+-------+------------+

select empno, ename, hiredate from emp where hiredate > '2011-12-03';
+-------+--------+------------+
| empno | ename  | hiredate   |
+-------+--------+------------+
|  7788 | SCOTT  | 2017-07-13 |
|  7876 | ADAMS  | 2017-07-13 |
|  7934 | MILLER | 2012-01-23 |
+-------+--------+------------+


[논리연산자] 
select empno, ename, sal from emp where sal >= 1000 and sal <= 2000; // and(그리고) 와 or(또한) 로 표현가능

ex) 입사년도 2011년인 사원데이터 구하기
select empno, ename, sal, hiredate from emp where hiredate >= '2011-01-01' and hiredate <= '2011-12-31';

select empno, ename, sal, hiredate from emp where hiredate between '2011-01-01' and '2011-12-31'  // 사이값

 select empno, ename, sal, hiredate from emp where job in ('clerk','salesman');
//직책이 clerk이거나 salesman

select empno, ename, sal, comm from emp where comm is null; //null 인값만찾기
select empno, ename, sal, comm from emp where comm is not null; //null이 아닌값만 찾기

★like 많이 쓰임☆
where ename like 'k%' //k로시작
where ename like '%g' //g로 끝나는
where ename like '%i%' // i가 포함된

select empno, ename, sal, hiredate from emp where hiredate like '%-02-%'; //02월에 입사한 사원정보

where ename like '_-k%;  // 한글자만 출력

 select distinct deptno from emp; //  distinct 000  해당 목록만 출력

select distinct deptno, job from emp; // 부서별과 직책이 모두 중복되지않게 출력됨

select * from emp limit 3 // 상위부터 3개

select * from emp; // 전체 데이터 출력 ( 데이터가 많을경우 다운될수 있으니 limit를 꼭 사용할것)

order  by  컬럼명 - 오름차순= asc 내림차순 =desc

select deptno, job, empno, ename from emp order by deptno, job;
//부서번호 오름차순으로 정리한후 직책별로도 다시 오름차순 정리

select deptno no , job, empno, ename from emp order by no;
//no기준으로 오름차순


수학적계산
select abs(123), abs(-123);
select ceil(4.4), ceil(4.5), ceil(4.6);
select floor(4.4), floor(4.5), floor(4.6);
select round(4.4), round(4.5), round(4.6);
select truncate(999, 999, -2);
select pow(2, 2), pow(3,3);
select 5 % 2, mod(5,2);
select least(sal,2000) from emp;

문자열
select ascii('A'), ascii('a'); // 아스키코드 번호
select length('abc'); // 문자열의 길이
select length('가나다'), char_length('가나다'); // 다국어출력의 경우에는 char_ 붙이기
select ename, char_length(ename) from emp where deptno=10;  //10번부서의 이름(영문)길이 출력
select ename from emp where char_length(ename) = 4; // 이름이 네글자인 사람의 정보만 출력(방법1)
select ename, char_length(ename) from emp where ename like '____';  // 이름이 네글자인 사람의 정보만 출력 (방법2)

select concat( ename, '님의 직책은 ', job, '입니다') from emp where deptno=10;
+-------------------------------------------------------+
| concat( ename, '님의 직책은 ', job, '입니다')         |
+-------------------------------------------------------+
| CLARK님의 직책은 MANAGER입니다                    |
| KING님의 직책은 PRESIDENT입니다                     |
| MILLER님의 직책은 CLERK입니다                         |
+-------------------------------------------------------+

select concat( ename, '님의 연봉은 ',floor(sal*12) , '입니다') '연봉 내용' from emp where deptno=10;

+---------------------------------------+
| 연봉 내용                             |
+---------------------------------------+
| CLARK님의 연봉은 29400입니다          |
| KING님의 연봉은 60000입니다           |
| MILLER님의 연봉은 15600입니다         |
+---------------------------------------+

select left( 'mariadb database study',5); // maria
select right( 'mariadb database study',5); // study
select mid( 'mariadb database study',5); // adb d 
select substring( 'mariadb database study',5,5);    // 몇부터몇까지 출력 

select empno, ename, sal from emp where left( ename, 1) = 's' ;
+-------+-------+---------+
| empno | ename | sal     |
+-------+-------+---------+
|  7369 | SMITH |  800.00 |
|  7788 | SCOTT | 3000.00 |
+-------+-------+---------+

select replace('mariadb database study', 'study', '스터디');// mariadb database 스터디
select insert('mariadb database study', 9, 8, '데이터베이스'); //mariadb 데이터베이스 study  9에서 8개를 잘라내고 그위치에 집어넣어라
select ucase('ABC'), upper('abc');// 대소문자 변환
select reverse( 'abc' ); // cba  순서변경
select trim(   '   abc    '    ); // 공백제거
select lpad('hi', 4, '?'); // 왼쪽이 비면 물음표 채움 (문자는 L패드를 주로씀)
select Rpad('hi', 4, '?'); // 오른쪽이 비면 물음표 채움 (숫자는 R패드를 주로씀)

[날짜관련]
select now(), sysdate(), current_timestamp();
select curdate();
select curtime();
 select now(), now()+1;
select now(), date_add(now(), interval 2 day);
select now(), date_add(now(), interval 2 month);
select now(), date_sub(now(), interval 2 month);
select now(), date_sub('2023-03-24', interval 2 day);
select timestampdiff(day,now(),'2023-03-24')// 현재날짜와 특정날짜 비교

select ename, timestampdiff(day,hiredate,now()) from emp where deptno=10;
// 10번부서 사원들의 입사일로 부터 현재까지 몇일이 지났는지 출력

select year( now() ); 
select year( '20230328' ), year( '2023-03-28' ), year( '2023/03/28'); //년도만출력
select dayname( now() ); //요일명
select unix_timestamp(); // 1970년을 기준으로 초단위로 출력
select now(), date_format( now(), '%Y-%m-%d'); // 

+---------------------+---------------------------------+
| now()               | date_format( now(), '%Y-%m-%d') |
+---------------------+---------------------------------+
| 2023-03-28 16:46:58 | 2023-03-28                      |
+---------------------+---------------------------------+

select now(), date_format( now(), '%Y/%m/%d');
+---------------------+---------------------------------+
| now()               | date_format( now(), '%Y/%m/%d') |
+---------------------+---------------------------------+
| 2023-03-28 16:47:12 | 2023/03/28                      |
+---------------------+---------------------------------+


[함수]
**조건문
select if( 1 = 2, '참', '거짓');  //이항연산자
select ename, sal, if(sal<2000, '적음' , '많음') 
+--------+---------+-----------------------------------+
| ename  | sal     | if(sal<2000, '적음' , '많음')     |
+--------+---------+-----------------------------------+
| ALLEN  | 1600.00 | 적음                              |
| WARD   | 1250.00 | 적음                              |
| MARTIN | 1250.00 | 적음                              |
| BLAKE  | 2850.00 | 많음                              |
| TURNER | 1500.00 | 적음                              |
| JAMES  |  950.00 | 적음                              |
+--------+---------+-----------------------------------+


select sal, comm, ifnull( comm, 0) from emp where deptno = 30;
//null값을 0으로 바꾸기

source 파일저장위치 //소스가 길어질 경우 외부파일(sql)을 불러읽어 출력(파일저장시 ansi형식으로 저장해야함)



















	





























































 






 






























